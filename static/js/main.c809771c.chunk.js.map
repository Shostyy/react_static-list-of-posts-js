{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"sx8IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,qCACE,sBAAKC,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SAEIG,EAASC,KAAI,SAAAR,GAAO,OAClB,qBAAKI,UAAU,cAAf,SACE,cAAC,EAAD,CAAaJ,QAASA,KADUA,EAAQS,UCNrCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,QCCGW,EAAW,SAAC,GAAD,QAAGC,KAAYC,GAAf,EAAWL,GAAX,EAAeK,OAAOX,EAAtB,EAAsBA,KAAMI,EAA5B,EAA4BA,SAAUI,EAAtC,EAAsCA,KAAtC,OACtB,qCACE,sBAAKP,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAIDI,EAASQ,OAAS,EACd,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCzBCS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SAEIa,EAAMT,KAAI,SAAAK,GAAI,OACZ,qBAAKT,UAAU,WAAf,SACE,cAAC,EAAD,CAAUS,KAAMA,KADaA,EAAKJ,UCWrC,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBQ,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIQ,IAAWR,EAAKF,OAC/C,MAWLF,UARqBe,EAQGT,EAAKJ,GAPtBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIsB,IAActB,EAAQyB,WAC7D,QAFP,IAAuBH,EALFH,KAgBRO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c809771c.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <>\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {\n      comments.map(comment => (\n        <div className=\"CommentInfo\" key={comment.id}>\n          <CommentInfo comment={comment} />\n        </div>\n      ))\n    }\n  </div>\n);\n","export const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: { id, title, body, comments, user } }) => (\n  <>\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {\n      comments.length > 0\n        ? <CommentList comments={comments} />\n        : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n    }\n  </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {\n      posts.map(post => (\n        <div className=\"PostInfo\" key={post.id}>\n          <PostInfo post={post} />\n        </div>\n      ))\n    }\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => userId === user.id)\n    || null;\n}\n\nfunction getComentById(commentId) {\n  return commentsFromServer.filter(comment => commentId === comment.postId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getComentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}